#1)в файле /etc/bind/named.conf.local добавить строчку
include "master.conf";
#2) создать в /var/cache/bind/ файл price c такими параметрами:
$TTL 1h  // время хранения в кэше данных таблицы, по истичении сервер перечитывает таблицу заново
@ IN SOA ns1 root ( // должна быть только 1 и стоять 1-ой определяет какой сервер является владельцем зоны(часть дерева доменных имён) и параметры зоны
2019092501 ; // Serial Number - серийный номер версии таблицы  формат - ГГГГММДДNN, где NN - номер изменения таблицы за текущий день (следует ли повторно загружать файлы зоны или игнорировать их )
1h           // refresh - время, указывающее как часто необходимо проверять таблицу мастер сервера на необходимость update-a
20m          // retry - время которое сервер ожидает при ошибочном сеансе refresh-a чтобы начать его заново
2w           // expire - макс предел времени хранения таблицы по его истечении таблица считается устаревшей с скачивается заново
20m          // Negative Cache TTL - запись о том что запрошенное имя домена не существует
)
@ NS ns1 // имена доменов на DNS сервере
@ NS ns2 // имена доменов на DNS сервере
// несколько имен на 1 адресс (одинаковые ip)
ns1 IN  A       185.161.210.66 // А-запись указывает на ip-адресс для данного имени хоста
ns2 IN  A       127.0.0.1
* IN    A       185.161.210.66 // * sub domain names sites
@ IN    A       185.161.210.66 // @ domain name sites

#3) в /var/cache/bind/ создать файл master.conf c параметрами:
        zone "priceinfo.su" { //имя домена за который отвечат зона
type master; // роль сервера/ master - сервер основной или главный
file "price";}; // путь до хранения файлов зон
проверить работоспособность dig exemple.com
где exemple.com имя веб ресурсa


service bind9 restart // sudo - запуск
service bind9 start   // sudo - запуск
                      // service bind9 status - check status

#####Настройка nginx

#1)создать файл /etc/nginx/sites-available/priceinfo.su.conf c такими параметрами:
        server {
        listen 80;
        server_name .priceinfo.su;
        root /var/www/html;
        index index.html;
        autoindex on;
        access_log /var/log/nginx/priceinfo_su_access.log combined;
        error_log /var/log/nginx/priceinfo_su_error.log;
        }

создать ссылку в sites-available на sites-enable
ln -s /etc/nginx/sites-available/priceinfo.su.conf  /etc/nginx/sites-enable/priceinfo.su.conf -- создать ссылку на него из каталога sites-enabled "подключить"

// start nginx (sudo service nginx start) перед проверкой

#2) nginx -s reload; // запускать как sudo
    nginx -t

acme.sh может работать от обычного пользователя без необходимости иметь root-права.
Помимо проверки владения доменом по HTTP есть вариант проверки через DNS. Нужно использовать один из способов.

Для работы скрипта на шлюзе должны быть установлены пакеты:

openssl
curl
# apt-get -y install curl openssl

В ручную:

useradd -m -s /bin/bash -d /home/acme/ acme // добавляем нового пользователя
# Проверить, если пользователя нет, а директорю /home/acme/ копировали с "рабочего"
сервера, то поправить права:
chown -R acme. /home/acme/ -  (рекурсивная смена владельца) chown можно изменить владельца файлов, каталогов и ссылок (все каталоги и подкаталоги сменят владельца или группу).

Зайти на сервер, и стать acme:

su - acme // выполнить из root-a

Подготовить необходимое:

mkdir ~/bin/
curl -L -o ~/bin/acme.sh https://raw.githubusercontent.com/Neilpang/acme.sh/master/acme.sh // загружаем с git-a программный пакет acme
chmod +x ~/bin/acme.sh // даём права на доступ пользователю к скрипту

Проверка через HTTP

acme.sh может организовать проверку владения доменом через HTTP. В конфиг вебсервера добавить обработку в урле /.well-known/ с указанием weboot-каталога, куда есть доступ у пользователя acme на запись. Не забудьте сигнал вебсерверу - перечитать конфиг.

от рута

Пример для nginx (прописывать в /etc/nginx/sites-enabled/*.conf перед в теле "server"):

server {
        listen 80;
        server_name .priceinfo.su;
        root /var/www/html;
        indexlocation /.well-known/ {
        root /home/acme/webroot;
        } index.html;
        autoindex on;
        access_log /var/log/nginx/priceinfo_su_access.log combined;
        error_log /var/log/nginx/priceinfo_su_error.log;
        location /.well-known/ {
        root /home/acme/webroot;
        }

        }

Если на сервере используется редирект с HTTP на HTTPS, то добавить лучше в результирующий сервер, обслуживающий HTTPS.

Стать acme:

su - acme

В домашнем каталоге acme создать каталог webroot: mkdir ~/webroot.

Проверить можно к примеру curl`ом:

~$ mkdir -p ~/webroot/.well-known/acme-challenge
~$ echo Test > ~/webroot/.well-known/acme-challenge/test.html
~$ curl -L http://priceinfo.su/.well-known/acme-challenge/test.html
Test

если не отработало rndc reload

~$ rm ~/webroot/.well-known/acme-challenge/test.html

~/bin/acme.sh --issue -d priceinfo.su -d www.priceinfo.su -w ~/webroot

Ключ и сертификаты будут в каталоге /home/acme/.acme.sh/priceinfo.su/

в каталоге /etc/nginx/ создать директорию certs

mkdir certs

сгенерить шифр в каталоге nginx
openssl dhparam -out dhparams.pem 2048

в mkdir создать ссылку на сертификаты

ln -s ~acme/.acme.sh/priceinfo.su /etc/nginx/certs/

перечитать конфиг nginx -s reload

Проверка через DNS

от рута

Шаг 1. Стать acme:

su - acme

Шаг 2. Выполнить:

Прописать в
/var/cache/bind/price
строку

_acme-challenge.priceinfo.su.   IN      TXT     "......"

~/bin/acme.sh --issue --dns -d priceinfo.su -d '*.priceinfo.su' --yes-I-know-dns-manual-mode-enough-go-ahead-please
после прописи ТХТ записей выполнить

rndc reload


dig _acme-challenge.priceinfo.su TXT

~/bin/acme.sh --renew --dns -d priceinfo.su -d '*.priceinfo.su' --yes-I-know-dns-manual-mode-enough-go-ahead-please

Приверы настроек, смотреть сюда!!!!!!!! должно быть так с заглушкой

server {
        listen 80;
        server_name .priceinfo.su;
        root /var/www/html;
        index index.html index.nginx-debian.html;
        autoindex on;
        access_log /var/log/nginx/priceinfo_su_access.log combined;
        error_log /var/log/nginx/priceinfo_su_error.log;
        location / {
                return 301 https://www.priceinfo.su$request_uri;
        }
        location /.well-known/ {
                root /home/acme/webroot;
        }
}
server {
listen       443;
server_name .priceinfo.su;
ssl                             on;
ssl_protocols                   TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers                     HIGH:!aNULL:!MD5;
ssl_prefer_server_ciphers       on;
ssl_dhparam                     certs/dhparams.pem;
ssl_certificate                 certs/priceinfo.su/fullchain.cer;
ssl_certificate_key             certs/priceinfo.su/priceinfo.su.key;
ssl_session_cache               shared:SSL:10m;
ssl_session_timeout             40m;
}

#### GEO DNS

/var/cache/bind/master.conf

acl "NA"{
    geoip country US;
    geoip country MX;
    geoip country CA;
    geoip country AU;
    geoip country AR;
    geoip country BR;
    geoip country CN;
    geoip country TH;
    geoip country SG;
    geoip country PA;
    geoip country JP;
    geoip country MY;
    geoip country KR;
    geoip country ID;
    geoip country VN;
};

view "NA"{
match-clients { NA; };
zone "priceinfo.su" { file "dom_NA"; type master;};
};
view "default"{
zone "priceinfo.su" { file "dom"; type master;};
};

/etc/bind/named.conf.default-zones 

всё удалить или закоментить #

/etc/bind/named.conf.options

options {
      directory "/var/cache/bind";
      dnssec-validation auto;
      auth-nxdomain no;    # conform to RFC1035
      listen-on-v6 { none; };
      listen-on { any; };
      allow-recursion { 127.0.0.1; };
      allow-query-cache { 127.0.0.1; };
      notify no;
      geoip-directory "/usr/share/GeoIP";
};

перекидывать между серверами
rsync -avze ssh /home/acme/.acme.sh root@195.123.241.15:/home/acme/ // указывать ip того сервера на который перекидываешь данные

---------------------------------------------
ss -tnlp -проверка  tcp соединения
ss -unlp -пролвека udp соединения
lsof -i:port #проверка порта
# remote
nс -zv $HOST $PORT #Проверяет tcp соединение
nc -zvu $HOST $PORT #Проверят udp соединение
tellnet $HOST $PORT #аналогично, только для tcp соединений 
ping $HOST #проверка ICMP

 dig (name sayt) +traceS
-----------------------------------------


